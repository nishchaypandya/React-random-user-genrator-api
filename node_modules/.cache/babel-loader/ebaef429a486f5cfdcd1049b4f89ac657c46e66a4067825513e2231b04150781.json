{"ast":null,"code":"var _jsxFileName = \"D:\\\\client_data\\\\social-garden\\\\React-test\\\\src\\\\Components\\\\Slider-Show.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport Slider_Data from \"./Slider-Data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slider_Show() {\n  _s();\n  // user data store array\n  const [users, fetchUsers] = useState([]);\n\n  // function for fetch thought data api\n\n  const getData = () => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json()).then(json => fetchUsers(json));\n  };\n\n  // call data effect function\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // slick slider effects are here\n  var effects = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 1,\n    onInit: function (e) {\n      $el.append('<div class=\"slick-counter\">' + parseInt(e.currentSlide + 1, 10) + ' / ' + e.slideCount + '</div>');\n    },\n    onAfterChange: function (e) {\n      $el.find('.slick-counter').html(e.currentSlide + 1 + ' / ' + e.slideCount);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          ...effects,\n          children: users.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-5 h-100 mx-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box-card box-user text-center text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-100 list-text\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"text-dark link-text-main\",\n                  to: `userdata/${data.id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-nowrap\",\n                    children: data.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Slider_Show, \"mYa1BExQ0k/3qrpAoZ6e9TnAwQs=\");\n_c = Slider_Show;\nexport default Slider_Show;\nvar _c;\n$RefreshReg$(_c, \"Slider_Show\");","map":{"version":3,"names":["React","useState","useEffect","Link","Slider","Slider_Data","Slider_Show","users","fetchUsers","getData","fetch","then","res","json","effects","dots","infinite","speed","slidesToShow","slidesToScroll","onInit","e","$el","append","parseInt","currentSlide","slideCount","onAfterChange","find","html","map","data","id","username"],"sources":["D:/client_data/social-garden/React-test/src/Components/Slider-Show.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport Slider_Data from \"./Slider-Data\";\n\nfunction Slider_Show() {\n  // user data store array\n  const [users, fetchUsers] = useState([]);\n\n  // function for fetch thought data api\n  \n  const getData = () => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())  \n      .then(json => fetchUsers(json))\n  };\n\n  // call data effect function\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // slick slider effects are here\n  var effects = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 1,\n    onInit: function(e){\n      $el.append('<div class=\"slick-counter\">'+ parseInt(e.currentSlide + 1, 10) +' / '+ e.slideCount +'</div>');\n    },\n    onAfterChange: function(e){\n      $el.find('.slick-counter').html(e.currentSlide + 1 +' / '+e.slideCount);\n    },\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 mt-5\">\n          <Slider {...effects}>\n            {users.map((data) => (\n              <div className=\"col-5 h-100 mx-1\" key={data.id}>\n                <div className=\"box-card box-user text-center text-white\">\n                  <div className=\"h-100 list-text\">\n                    <Link className=\"text-dark link-text-main\" to={`userdata/${data.id}`}>\n                    <p className=\"text-nowrap\">{data.username}</p>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </Slider>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Slider_Show;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,SAASC,WAAW,GAAG;EAAA;EACrB;EACA,MAAM,CAACC,KAAK,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAExC;;EAEA,MAAMQ,OAAO,GAAG,MAAM;IACpBC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACrBF,IAAI,CAACE,IAAI,IAAIL,UAAU,CAACK,IAAI,CAAC,CAAC;EACnC,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACdO,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIK,OAAO,GAAG;IACZC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,GAAG;IACVC,YAAY,EAAE,CAAC;IACfC,cAAc,EAAE,CAAC;IACjBC,MAAM,EAAE,UAASC,CAAC,EAAC;MACjBC,GAAG,CAACC,MAAM,CAAC,6BAA6B,GAAEC,QAAQ,CAACH,CAAC,CAACI,YAAY,GAAG,CAAC,EAAE,EAAE,CAAC,GAAE,KAAK,GAAEJ,CAAC,CAACK,UAAU,GAAE,QAAQ,CAAC;IAC5G,CAAC;IACDC,aAAa,EAAE,UAASN,CAAC,EAAC;MACxBC,GAAG,CAACM,IAAI,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAACR,CAAC,CAACI,YAAY,GAAG,CAAC,GAAE,KAAK,GAACJ,CAAC,CAACK,UAAU,CAAC;IACzE;EACF,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB;MAAK,SAAS,EAAC,KAAK;MAAA,uBAClB;QAAK,SAAS,EAAC,aAAa;QAAA,uBAC1B,QAAC,MAAM;UAAA,GAAKZ,OAAO;UAAA,UAChBP,KAAK,CAACuB,GAAG,CAAEC,IAAI,iBACd;YAAK,SAAS,EAAC,kBAAkB;YAAA,uBAC/B;cAAK,SAAS,EAAC,0CAA0C;cAAA,uBACvD;gBAAK,SAAS,EAAC,iBAAiB;gBAAA,uBAC9B,QAAC,IAAI;kBAAC,SAAS,EAAC,0BAA0B;kBAAC,EAAE,EAAG,YAAWA,IAAI,CAACC,EAAG,EAAE;kBAAA,uBACrE;oBAAG,SAAS,EAAC,aAAa;oBAAA,UAAED,IAAI,CAACE;kBAAQ;oBAAA;oBAAA;oBAAA;kBAAA;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA;cACvC;gBAAA;gBAAA;gBAAA;cAAA;YACH;cAAA;cAAA;cAAA;YAAA;UACF,GAP+BF,IAAI,CAACC,EAAE;YAAA;YAAA;YAAA;UAAA,QAS/C;QAAC;UAAA;UAAA;UAAA;QAAA;MACK;QAAA;QAAA;QAAA;MAAA;IACL;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GApDQ1B,WAAW;AAAA,KAAXA,WAAW;AAsDpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}